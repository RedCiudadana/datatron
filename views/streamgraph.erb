<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var data, samples;
var beginning, ending;
var nest = d3.nest().key(function(d) { return d.category; });

function visualizeit() {
  // Setup data
  beginning = _.min(data, function(o) { return o.day }).day,
  ending    = _.max(data, function(o) { return o.day }).day;
  var maxCount = _.max(data, function(o) { return o.count }).count;
  var layers = nest.entries(data);
  samples = _.max(layers, function(layer) { return layer.values.length }).values.length;
  layers = fillMissingDays(layers);

  var colors = {
    "Salud":          "#00a6fc",
    "Migración":      "#23203f",
    "Educación":      "#00a79f",
    "Gasto público":  "#7b00ff",
    "Seguridad":      "#ffd700",
    "Economía":       "#32516c",
    "Medio ambiente": "#c8e547",
    "Otro":           "#9eabb6"
  };

  // Setup style and layout
  var width = document.body.clientWidth,
      height = 500,
      color = d3.scale.ordinal().domain(_.keys(colors)).range(_.values(colors));

  // Setup graph
  var x = d3.scale.linear()
        .domain([beginning, ending])
        .range([0, width]),
      y = d3.scale.linear()
        .domain([0, maxCount])
        .range([0, height/2]);

  var stack = d3.layout.stack()
        .offset("wiggle")
        .values(function(d) { return d.values })
        .x(function(d) { return d.day })
        .y(function(d) { return d.count });

  var area = d3.svg.area()
    .x(function(d)  { return x(d.day) })
    .y0(function(d) { return y(d.y0) })
    .y1(function(d) { return y(d.y0 + d.y) });

  var svg = d3.select("#graph").append("svg")
        .attr("width", width)
        .attr("height", height);

  svg.selectAll("path")
      .data(stack(layers))
      .enter().append("path")
      .attr("d", function(d) { return area(d.values) })
      .style("fill", function(d) { return color(d.key) });

  var legend = svg.append("g")
    .attr("class", "legend")
    .attr("transform", "translate(-40," + (height - 50) + ")")
    .style("font-size","12px");

  var r = 6;

  legend.selectAll('circle')
    .data(layers)
    .enter()
    .append("circle")
    .attr("r", r)
    .attr("cx", function(d, i) { return width - (100 * (i + 1)) })
    .attr("cy", function(d, i) { return 0 })
    .style("fill", function(d) { return color(d.key) });

  legend.selectAll('text')
    .data(layers)
    .enter()
    .append("text")
    .attr("x", function(d, i) { return width - (100 * (i + 1)) + 15 })
    .attr("y", function(d, i) { return r })
    .text(function(d) { return d.key });
};

d3.json("/daily.json", function(error, json) {
  if (error) return console.warn(error);
  data = json;
  visualizeit();
});

function fillMissingDays(layers) {
  _.each(layers, function(layer) {
    var rangeOfDays = _.range(beginning, ending + 1);
    var daysInLayer = _.pluck(layer.values, 'day');
    var missingDays = _.difference(rangeOfDays, daysInLayer);
    _.each(missingDays, function(day) {
      layer.values.push({ category: _.last(layer.values).category, count: 0, day: day });
    });
    layer.values = _.sortBy(layer.values, function (value) { return value.day });
  });

  return layers;
}

</script>

